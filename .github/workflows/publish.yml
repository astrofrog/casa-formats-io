name: Build and upload to PyPI

on: [push, pull_request]

jobs:

  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-18.04, windows-latest, macos-latest]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       name: Install Python
  #       with:
  #         python-version: '3.7'
  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel
  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheelhouse
  #       env:
  #         CIBW_BUILD: cp36-* cp37-* cp38-*
  #         CIBW_TEST_EXTRAS: test
  #         CIBW_TEST_COMMAND: pytest --pyargs casa_formats_io
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: ./wheelhouse/*.whl

  build_wheels_exotic:

    # The host should always be linux
    runs-on: ubuntu-18.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 3 arch/distro combinations
    strategy:
      matrix:
        include:
          - arch: aarch64
          - arch: ppc64le
          - arch: s390x

    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu18.04

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/wheelhouse"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/wheelhouse:/wheelhouse"

          # The shell to run commands with in the container
          shell: /bin/sh

          env: |
            CIBW_BUILD: cp36-* cp37-* cp38-*
            CIBW_TEST_EXTRAS: test
            CIBW_TEST_COMMAND: python3 -m pytest --pyargs casa_formats_io

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -q -y
            apt-get install -q -y git python3 python3-pip
            python3 -m pip install cibuildwheel

          # Produce a binary artifact and place it in the mounted volume
          run: |
            python3 -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - name: Install build
        run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist --outdir dist/ .
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  # upload_pypi:
  #   name: Upload to PyPI
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist
  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
